//Autor: Acosta Osorio Christian
#include <stdio.h>
#include <time.h>

int binarySearch(int arr[], int left, int right, int x) {
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == x) {
            return mid;
        } else if (arr[mid] < x) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1;
}

int main() {
	int x=100000, k;
    int arr[x];
    int search = 7;
    int output = -1;
           for(k=0;k<=x;k++){
            arr[k]=1+rand()%100;
        }

    clock_t start, end;
    double cpu_time_used;
    

    start = clock(); //  tiempo de inicio
    

    output = binarySearch(arr, 0, x-1, search);

    end = clock(); //  tiempo de finalización

    cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC; // Cálculo del tiempo 

    if (output != -1) {
        printf("Element found at index %d\n", output);
    } else {
        printf("Element not found\n");
    }

    printf("El tiempo de ejecucion fue de %f segundos.\n", cpu_time_used);

    return 0;
}
