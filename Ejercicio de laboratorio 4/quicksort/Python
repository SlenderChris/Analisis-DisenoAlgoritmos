#Autor: Acosta Osorio Christian
import random

# Function to find the partition position
def partition(array, low, high):
    # Choose the rightmost element as pivot
    pivot = array[high]
    i = low - 1

    for j in range(low, high):
        if array[j] <= pivot:
            i = i + 1
            (array[i], array[j]) = (array[j], array[i])

    (array[i + 1], array[high]) = (array[high], array[i + 1])

    return i + 1

# Function to perform quicksort
def quicksort(array, low, high):
    if low < high:
        pi = partition(array, low, high)
        quicksort(array, low, pi - 1)
        quicksort(array, pi + 1, high)

# Generate a random array with 10 thousand elements
array = [random.randint(1, 1000) for _ in range(10000)]

# Function call
quicksort(array, 0, len(array) - 1)

print('Sorted array:')
for x in array:
    print(x, end=" ")
